class LessBalanceException extends Exception {
    public LessBalanceException(double amount) {
        super("Withdraw amount (" + amount + " Rs) is not possible. Minimum balance must be maintained.");
    }
}

class Account {
    private double balance;
    private static final double MIN_BALANCE = 500;

    public Account() {
        balance = MIN_BALANCE;
    }

    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposited " + amount + " Rs. New balance: " + balance + " Rs");
    }

    public void withdraw(double amount) throws LessBalanceException {
        if (balance - amount < MIN_BALANCE) {
            throw new LessBalanceException(amount);
        }
        balance -= amount;
        System.out.println("Withdrawn " + amount + " Rs. New balance: " + balance + " Rs");
    }

    public double getBalance() {
        return balance;
    }
}

public class TestAccount {
    public static void main(String[] args) {
        Account account1 = new Account();
        Account account2 = new Account();

        // Deposit money into both accounts
        account1.deposit(1000); // Balance: 1500
        account2.deposit(700);  // Balance: 1200

        // Try to withdraw from account1 (will throw exception)
        try {
            account1.withdraw(1600); // Would leave only -100 => Invalid
        } catch (LessBalanceException e) {
            System.out.println("LessBalanceException: " + e.getMessage());
        }

        // Try to withdraw from account2 (valid)
        try {
            account2.withdraw(200); // Leaves 1000 => Valid
        } catch (LessBalanceException e) {
            System.out.println("LessBalanceException: " + e.getMessage());
        }
    }
}

OUTPUT:

Deposited 1000.0 Rs. New balance: 1500.0 Rs
Deposited 700.0 Rs. New balance: 1200.0 Rs
LessBalanceException: Withdraw amount (1600.0 Rs) is not possible. Minimum balance must be maintained.
Withdrawn 200.0 Rs. New balance: 1000.0 Rs
